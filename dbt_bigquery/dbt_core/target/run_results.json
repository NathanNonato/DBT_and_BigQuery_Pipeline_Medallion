{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.5", "generated_at": "2025-07-26T23:05:43.327583Z", "invocation_id": "60aca9a0-7df5-407b-9398-48ee28178643", "invocation_started_at": "2025-07-26T23:04:56.111614Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-26T23:05:09.682609Z", "completed_at": "2025-07-26T23:05:09.697305Z"}, {"name": "execute", "started_at": "2025-07-26T23:05:09.697714Z", "completed_at": "2025-07-26T23:05:22.844700Z"}], "thread_id": "Thread-1", "execution_time": 13.164311170578003, "adapter_response": {"_message": "CREATE TABLE (1.4m rows, 451.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1401982, "bytes_processed": 473017292, "bytes_billed": 473956352, "location": "us-central1", "project_id": "dbtandbigquery-467100", "job_id": "b09afc2a-6353-4c20-a11a-9b97d54c5f81", "slot_ms": 78064}, "message": "CREATE TABLE (1.4m rows, 451.1 MiB processed)", "failures": null, "unique_id": "model.dbt_core.stg_food_reviews", "compiled": true, "compiled_code": "-- \ud83e\udd48 STAGING LAYER (Silver)\n-- Responsible for: Cleaning, Standardization, Renaming, Validation\n\n\n\nWITH source_data AS (\n    SELECT *\n    FROM `dbtandbigquery-467100`.`raw`.`food_reviews`\n),\n\ncleaned_data AS (\n    SELECT\n        -- Standardized IDs\n        ReviewId AS review_id,\n        RecipeId AS recipe_id,\n        AuthorId AS author_id,\n        \n        -- String cleaning\n        TRIM(AuthorName) AS author_name,\n        TRIM(Review) AS review_text,\n        \n        -- Rating standardization\n        CASE \n            WHEN Rating BETWEEN 1 AND 5 THEN Rating\n            WHEN Rating = 0 THEN NULL  -- Rating 0 is invalid\n            ELSE NULL\n        END AS rating,\n        \n        -- Date standardization\n        CASE \n            WHEN DateSubmitted IS NOT NULL \n            THEN CAST(DateSubmitted AS TIMESTAMP)\n            ELSE NULL\n        END AS submitted_at,\n        \n        CASE \n            WHEN DateModified IS NOT NULL \n            THEN CAST(DateModified AS TIMESTAMP)\n            ELSE NULL\n        END AS modified_at,\n        \n        -- Calculated fields\n        LENGTH(TRIM(Review)) AS review_length,\n        \n        -- Quality flags\n        CASE \n            WHEN TRIM(Review) = '' OR Review IS NULL THEN FALSE\n            ELSE TRUE\n        END AS has_review_text,\n        \n        -- Metadata\n        CURRENT_TIMESTAMP() AS loaded_at\n        \n    FROM source_data\n)\n\nSELECT *\nFROM cleaned_data\n-- Filter only valid reviews\nWHERE review_id IS NOT NULL\n  AND recipe_id IS NOT NULL", "relation_name": "`dbtandbigquery-467100`.`staging`.`stg_food_reviews`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-26T23:05:22.852976Z", "completed_at": "2025-07-26T23:05:22.859119Z"}, {"name": "execute", "started_at": "2025-07-26T23:05:22.859578Z", "completed_at": "2025-07-26T23:05:31.981147Z"}], "thread_id": "Thread-1", "execution_time": 9.130521774291992, "adapter_response": {"_message": "CREATE TABLE (42.2k rows, 70.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 42239, "bytes_processed": 73686106, "bytes_billed": 74448896, "location": "us-central1", "project_id": "dbtandbigquery-467100", "job_id": "af0e6272-1222-4162-b03c-a1f33de678ba", "slot_ms": 25752}, "message": "CREATE TABLE (42.2k rows, 70.3 MiB processed)", "failures": null, "unique_id": "model.dbt_core.mart_author_insights", "compiled": true, "compiled_code": "-- \ud83e\udd47 MARTS LAYER (Gold)\n-- Author Insights - Reviewer Behavior and Patterns\n\n\n\nWITH author_behavior AS (\n    SELECT\n        author_id,\n        author_name,\n        \n        -- Activity Metrics\n        COUNT(*) AS total_reviews_written,\n        COUNT(DISTINCT recipe_id) AS unique_recipes_reviewed,\n        \n        -- Rating Metrics\n        ROUND(AVG(rating), 2) AS avg_rating_given,\n        STDDEV(rating) AS rating_variability,\n        \n        -- Rating Patterns\n        COUNTIF(rating = 5) AS five_star_reviews,\n        COUNTIF(rating = 1) AS one_star_reviews,\n        ROUND(COUNTIF(rating >= 4) / COUNT(*) * 100, 1) AS positive_review_rate,\n        \n        -- Text Metrics\n        ROUND(AVG(review_length), 0) AS avg_review_length,\n        MAX(review_length) AS longest_review,\n        COUNTIF(has_review_text) AS reviews_with_text,\n        \n        -- Temporal Metrics\n        MIN(submitted_at) AS first_review_date,\n        MAX(submitted_at) AS latest_review_date,\n        DATE_DIFF(MAX(submitted_at), MIN(submitted_at), DAY) AS reviewing_span_days,\n        \n        -- Activity Categorization\n        CASE \n            WHEN COUNT(*) >= 50 THEN 'Super Active'\n            WHEN COUNT(*) >= 20 THEN 'Very Active'\n            WHEN COUNT(*) >= 10 THEN 'Active'\n            WHEN COUNT(*) >= 5 THEN 'Moderate'\n            ELSE 'Casual'\n        END AS activity_level,\n        \n        -- Behavior Categorization\n        CASE \n            WHEN AVG(rating) >= 4.5 THEN 'Optimistic'\n            WHEN AVG(rating) <= 2.5 THEN 'Critical'\n            WHEN STDDEV(rating) <= 0.5 THEN 'Consistent'\n            ELSE 'Varied'\n        END AS rating_behavior,\n        \n        -- Metadata\n        CURRENT_TIMESTAMP() AS calculated_at\n        \n    FROM `dbtandbigquery-467100`.`staging`.`stg_food_reviews`\n    WHERE author_id IS NOT NULL\n      AND rating IS NOT NULL\n    GROUP BY author_id, author_name\n)\n\nSELECT *\nFROM author_behavior\nWHERE total_reviews_written >= 3  -- Only authors with at least 3 reviews\nORDER BY total_reviews_written DESC", "relation_name": "`dbtandbigquery-467100`.`marts`.`mart_author_insights`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-26T23:05:31.991092Z", "completed_at": "2025-07-26T23:05:32.001191Z"}, {"name": "execute", "started_at": "2025-07-26T23:05:32.001689Z", "completed_at": "2025-07-26T23:05:43.310380Z"}], "thread_id": "Thread-1", "execution_time": 11.322277784347534, "adapter_response": {"_message": "CREATE TABLE (265.8k rows, 54.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 265816, "bytes_processed": 56871278, "bytes_billed": 57671680, "location": "us-central1", "project_id": "dbtandbigquery-467100", "job_id": "cf095062-b284-45ab-a230-9d926156287a", "slot_ms": 31489}, "message": "CREATE TABLE (265.8k rows, 54.2 MiB processed)", "failures": null, "unique_id": "model.dbt_core.mart_review_metrics", "compiled": true, "compiled_code": "-- \ud83e\udd47 MARTS LAYER (Gold)\n-- Review Metrics by Recipe - Ready for BI/Dashboards\n\n\n\nWITH recipe_metrics AS (\n    SELECT\n        recipe_id,\n        \n        -- Volume Metrics\n        COUNT(*) AS total_reviews,\n        COUNT(DISTINCT author_id) AS unique_reviewers,\n        \n        -- Rating Metrics\n        ROUND(AVG(rating), 2) AS avg_rating,\n        MIN(rating) AS min_rating,\n        MAX(rating) AS max_rating,\n        \n        -- Rating Distribution\n        COUNTIF(rating = 5) AS rating_5_count,\n        COUNTIF(rating = 4) AS rating_4_count,\n        COUNTIF(rating = 3) AS rating_3_count,\n        COUNTIF(rating = 2) AS rating_2_count,\n        COUNTIF(rating = 1) AS rating_1_count,\n        \n        -- Text Metrics\n        ROUND(AVG(review_length), 0) AS avg_review_length,\n        COUNTIF(has_review_text) AS reviews_with_text,\n        ROUND(COUNTIF(has_review_text) / COUNT(*) * 100, 1) AS text_completion_rate,\n        \n        -- Temporal Metrics\n        MIN(submitted_at) AS first_review_date,\n        MAX(submitted_at) AS latest_review_date,\n        DATE_DIFF(MAX(submitted_at), MIN(submitted_at), DAY) AS review_span_days,\n        \n        -- Popularity Categorization\n        CASE \n            WHEN COUNT(*) >= 100 THEN 'High'\n            WHEN COUNT(*) >= 50 THEN 'Medium'\n            WHEN COUNT(*) >= 10 THEN 'Low'\n            ELSE 'Very Low'\n        END AS popularity_category,\n        \n        -- Quality Categorization\n        CASE \n            WHEN AVG(rating) >= 4.5 THEN 'Excellent'\n            WHEN AVG(rating) >= 4.0 THEN 'Very Good'\n            WHEN AVG(rating) >= 3.5 THEN 'Good'\n            WHEN AVG(rating) >= 3.0 THEN 'Fair'\n            ELSE 'Poor'\n        END AS quality_category,\n        \n        -- Metadata\n        CURRENT_TIMESTAMP() AS calculated_at\n        \n    FROM `dbtandbigquery-467100`.`staging`.`stg_food_reviews`\n    WHERE rating IS NOT NULL\n    GROUP BY recipe_id\n)\n\nSELECT *\nFROM recipe_metrics\nORDER BY total_reviews DESC", "relation_name": "`dbtandbigquery-467100`.`marts`.`mart_review_metrics`", "batch_results": null}], "elapsed_time": 43.44404196739197, "args": {"log_format": "default", "introspect": true, "cache_selected_only": false, "use_colors_file": true, "empty": false, "show_resource_report": false, "defer": false, "upload_to_artifacts_ingest_api": false, "log_path": "/Users/bi006217/Documents/study/dbt_bigquery/dbt_core/logs", "validate_macro_args": false, "print": true, "require_explicit_package_overrides_for_builtin_materializations": true, "require_nested_cumulative_type_params": false, "require_resource_names_without_spaces": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "state_modified_compare_more_unrendered_values": false, "use_colors": true, "send_anonymous_usage_stats": true, "log_level_file": "debug", "write_json": true, "state_modified_compare_vars": false, "which": "run", "strict_mode": false, "profiles_dir": "/Users/bi006217/Documents/study/dbt_bigquery/dbt_core", "version_check": true, "use_fast_test_edges": false, "invocation_command": "dbt run", "macro_debugging": false, "partial_parse_file_diff": true, "exclude": [], "log_file_max_bytes": 10485760, "favor_state": false, "log_format_file": "debug", "project_dir": "/Users/bi006217/Documents/study/dbt_bigquery/dbt_core", "require_generic_test_arguments_property": false, "select": [], "require_yaml_configuration_for_mf_time_spines": false, "populate_cache": true, "static_parser": true, "require_all_warnings_handled_by_warn_error": false, "vars": {}, "skip_nodes_if_on_run_start_fails": false, "require_batched_execution_for_custom_microbatch_strategy": false, "partial_parse": true, "show_all_deprecations": false, "source_freshness_run_project_hooks": true, "printer_width": 80, "quiet": false, "log_level": "info", "indirect_selection": "eager"}}